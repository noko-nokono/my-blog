---
description: 
globs: 
alwaysApply: false
---
# プルリクエスト作成ガイドライン

## Cursorでのプルリクエスト作成方法
チャットで以下のコマンドを入力することで、プルリクエストのプレビューと作成ができます：

```
/pr preview  # PRの内容をプレビュー表示
/pr confirm  # プレビューの内容を確認して承認
/pr edit     # プレビュー内容の編集
```

例：
- プレビュー表示: `/pr preview`
- プレビュー内容の編集: `/pr edit --title "機能追加: トップページのレイアウト改善"`
- PR作成の承認: `/pr confirm`

## プルリクエストの作成フロー

### 1. プレビュー表示 (`/pr preview`)
```markdown
# プルリクエストプレビュー

## 基本情報
- タイトル: [PRのタイトル]
- ベースブランチ: main
- 作成ブランチ: [現在のブランチ名]
- 作成者: [ユーザー名]

## 変更内容
[自動生成される変更の説明]

## 変更概要
- 追加ファイル: [数]
- 修正ファイル: [数]
- 削除ファイル: [数]
- 総変更行数: +[追加行数] -[削除行数]

## 変更されたファイル
[ファイル一覧と変更内容のサマリー]

## チェックリスト
- [ ] コーディング規約に準拠している
- [ ] 適切なテストが追加されている
- [ ] ドキュメントが更新されている
- [ ] UIの変更がある場合、スクリーンショットを添付している

## 自動チェック結果
- [ ] ブランチが最新
- [ ] コンフリクトなし
- [ ] ビルド成功
- [ ] テスト成功

## 確認手順
1. 上記の内容を確認
2. 必要に応じて `/pr edit` で編集
3. 問題なければ `/pr confirm` で承認
```

### 2. プレビュー内容の編集 (`/pr edit`)
編集可能な項目：
- `--title "新しいタイトル"`: タイトルの変更
- `--description "説明"`: 説明の追加・編集
- `--reviewers "user1,user2"`: レビュアーの指定
- `--labels "label1,label2"`: ラベルの設定
- `--milestone "v1.0"`: マイルストーンの設定

### 3. プレビューの承認と作成 (`/pr confirm`)
```markdown
# プルリクエスト作成の確認

以下の内容でプルリクエストを作成しますか？

## 最終確認項目
- [ ] タイトルは適切か
- [ ] 説明は十分か
- [ ] 変更内容は意図通りか
- [ ] レビュアーは適切か
- [ ] ラベル・マイルストーンは正しいか

確認が完了したら、以下のいずれかを選択してください：
1. `/pr confirm --create`  : PRを作成
2. `/pr edit`             : 内容を編集
3. `/pr preview`          : プレビューを再表示
```

承認後の結果表示：
```markdown
# プルリクエスト作成完了

## 作成されたPR
- URL: [PRのURL]
- 番号: #[PR番号]

## 次のステップ
1. レビュアーにレビューを依頼
2. CIの実行結果を確認
3. フィードバックに対応

## 補足情報
- レビュー依頼先: [レビュアー一覧]
- 想定所要時間: [予測時間]
```

## 注意事項
- プレビュー表示後は必ず内容を確認してください
- 承認前に自動チェックの結果を確認してください
- 承認後の変更は新しいコミットとして追加する必要があります

## エラー発生時の対応
エラーが発生した場合：
1. エラーメッセージを確認
2. 推奨される対処方法に従う
3. 必要に応じて `/pr preview` で再確認
4. 問題が解決したら `/pr confirm` で再度承認

## プルリクエストの構成

### 1. タイトル形式
以下のプレフィックスを使用してPRの種類を明確にします：
- 機能追加: `feat: `
- バグ修正: `fix: `
- リファクタリング: `refactor: `
- ドキュメント: `docs: `
- スタイル修正: `style: `
- パフォーマンス改善: `perf: `
- テスト追加: `test: `
- その他: `chore: `

### 2. 説明テンプレート
```markdown
## 変更内容
[変更の概要を簡潔に記述]

## 変更理由
[なぜこの変更が必要なのかを説明]

## 変更点
- [具体的な変更点1]
- [具体的な変更点2]
- [具体的な変更点3]

## スクリーンショット（UI変更がある場合）
[スクリーンショットを添付]

## 関連Issue
[関連するIssue番号をリンク]

## チェックリスト
- [ ] コーディング規約に準拠している
- [ ] 適切なテストが追加されている
- [ ] ドキュメントが更新されている
- [ ] レビュー用のスクリーンショットを添付している（UI変更時）
```

## 自動生成される内容

### 1. 変更概要
- 追加されたファイル
- 修正されたファイル
- 削除されたファイル
- 合計の変更行数

### 2. レビュー対象
- コードの変更差分
- 新規作成ファイル
- 設定ファイルの変更

### 3. 自動チェック項目
- [ ] ブランチが最新のmainから作成されているか
- [ ] コンフリクトが発生していないか
- [ ] CIテストがパスしているか
- [ ] コーディング規約に違反していないか

## プルリクエスト作成時の注意事項
1. 変更は1つの目的に集中する
2. レビュアーが理解しやすい大きさに抑える
3. テストが必要な変更には必ずテストを含める
4. UI変更を含む場合はスクリーンショットを添付
5. 関連するIssueがある場合は必ずリンクする

## プルリクエストの結果形式
```markdown
# プルリクエスト作成結果

## 基本情報
- タイトル: [PRのタイトル]
- ベースブランチ: main
- 作成ブランチ: [現在のブランチ名]
- 作成者: [ユーザー名]

## 変更概要
- 追加ファイル: [数]
- 修正ファイル: [数]
- 削除ファイル: [数]
- 総変更行数: +[追加行数] -[削除行数]

## 自動チェック結果
- [ ] ブランチ最新化: [OK/NG]
- [ ] コンフリクト: [なし/あり]
- [ ] CIテスト: [未実行/成功/失敗]
- [ ] コーディング規約: [OK/NG]

## 次のステップ
1. [必要なアクション1]
2. [必要なアクション2]
3. [必要なアクション3]
```

## 補足機能
- プルリクエストのドラフト作成: `/pr --draft`
- レビュアーの指定: `/pr --reviewers "username1,username2"`
- ラベルの追加: `/pr --labels "bug,urgent"`
- マイルストーンの設定: `/pr --milestone "v1.0.0"`

## プルリクエストの確認と承認

### 1. PRの確認 (`/pr check`)
確認時に表示される情報：
```markdown
# プルリクエスト確認結果

## 基本情報
- PR番号: #[番号]
- ステータス: [オープン/クローズ]
- レビュー状態: [レビュー待ち/レビュー中/承認済み]
- 作成日時: [日時]

## レビュー状況
- 承認者: [ユーザー名リスト]
- 修正リクエスト: [ユーザー名リスト]
- 保留中のコメント: [数]

## CI/CDステータス
- テスト: [成功/失敗/実行中]
- ビルド: [成功/失敗/実行中]
- コードカバレッジ: [パーセンテージ]

## コンフリクト状態
- コンフリクトの有無: [あり/なし]
- 最終更新: [日時]

## 変更統計
- 追加行数: +[数]
- 削除行数: -[数]
- 変更ファイル数: [数]
```

### 2. PR承認 (`/pr approve`)
承認時のオプション：
- `--comment "コメント"`: 承認時のコメントを追加
- `--with-suggestions`: 提案付きで承認
- `--conditional "条件"`: 条件付き承認

承認結果の表示：
```markdown
# プルリクエスト承認結果

## 承認情報
- 承認者: [ユーザー名]
- 承認日時: [日時]
- 承認タイプ: [無条件/条件付き]

## 承認コメント
[承認時のコメント]

## 次のステップ
1. [アクション1]
2. [アクション2]
3. [アクション3]
```

### 3. 修正リクエスト (`/pr request-changes`)
修正リクエスト時のオプション：
- `--comment "コメント"`: 修正リクエストの理由
- `--files "file1,file2"`: 特定のファイルに対する修正リクエスト
- `--priority "high/medium/low"`: 修正の優先度

修正リクエスト結果の表示：
```markdown
# 修正リクエスト結果

## リクエスト情報
- リクエスト者: [ユーザー名]
- リクエスト日時: [日時]
- 優先度: [高/中/低]

## 修正要求事項
[修正リクエストの内容]

## 対象ファイル
- [ファイル1]
- [ファイル2]

## 次のステップ
1. 修正内容の確認
2. 必要な変更の実装
3. 変更後の再レビュー依頼
```

## プルリクエストのライフサイクル
1. PR作成 (`/pr`)
2. レビュー依頼
3. レビュアーによる確認 (`/pr check`)
4. フィードバックの提供
   - 承認 (`/pr approve`)
   - 修正リクエスト (`/pr request-changes`)
5. 必要に応じて修正
6. 再レビュー
7. マージ承認

## 承認基準
- [ ] すべての必須レビュアーが承認している
- [ ] CI/CDチェックがパスしている
- [ ] コンフリクトが解消されている
- [ ] コーディング規約に準拠している
- [ ] テストが追加/更新されている
- [ ] ドキュメントが更新されている

## 承認後の自動チェック
- ブランチの保護ルールの確認
- マージ可能性の検証
- デプロイプレビューの生成
